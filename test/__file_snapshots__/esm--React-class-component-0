import _objectSpread from "@babel/runtime-corejs2/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime-corejs2/helpers/esm/objectWithoutProperties";
import _regeneratorRuntime from "@babel/runtime-corejs2/regenerator";
import _asyncToGenerator from "@babel/runtime-corejs2/helpers/esm/asyncToGenerator";
import _classCallCheck from "@babel/runtime-corejs2/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime-corejs2/helpers/esm/createClass";
import _inherits from "@babel/runtime-corejs2/helpers/esm/inherits";
import _createSuper from "@babel/runtime-corejs2/helpers/esm/createSuper";
import { jsx as _jsx } from "react/jsx-runtime.js";

var Button = /*#__PURE__*/function (_React$Component) {
  _inherits(Button, _React$Component);

  var _super = _createSuper(Button);

  function Button() {
    var _this;

    _classCallCheck(this, Button);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.handleClick = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                evt.preventDefault();
                _context.next = 3;
                return fetch('/foo');

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    return _this;
  }

  _createClass(Button, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          _this$props$type = _this$props.type,
          type = _this$props$type === void 0 ? 'button' : _this$props$type,
          chidlren = _this$props.chidlren,
          extraProps = _objectWithoutProperties(_this$props, ["type", "chidlren"]);

      return /*#__PURE__*/_jsx("button", _objectSpread(_objectSpread({
        type: type,
        onClick: this.handleClick
      }, extraProps), {}, {
        children: children
      }));
    }
  }]);

  return Button;
}(React.Component);